[tool.poetry]
name = "cookiecutter-poetry"
version = "0.1.0"
description = "A cookiecutter template for poetry."
authors = ["Andrew Linzie <caerulescens.github@proton.me>"]
readme = "README.md"
packages = [{include = "cookiecutter_poetry", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-cov = "^5.0.0"
ruff = "^0.6.4"
mypy = "^1.11.2"

[tool.pytest.ini_options]
minversion = "7.1.1"
addopts = "-ra -q"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]

[tool.coverage.paths]
source = ["src"]

[tool.coverage.run]
branch = true
source = ["src", "tests"]
parallel = true
dynamic_context = "test_function"

[tool.coverage.report]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "coverage_html_report"

[tool.ruff]
line-length = 88
target-version = "py312"
src = ["src", "tests"]

[tool.ruff.lint]
select = ["F", "E", "W", "C90", "I", "N", "D", "UP"]
ignore = ["D100", "D104", "D106"]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.mypy]
python_version = "3.12"
files = ["src", "tests"]
plugins = []
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
